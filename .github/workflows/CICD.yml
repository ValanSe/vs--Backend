name: CI/CD using GitHub Actions & Docker

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Create directory and file if not exist
      run: |
        mkdir -p ./src/main/resources
        echo "${{ secrets.APPLICATION_COMMON }}" > ./src/main/resources/application.yml

    - name: Create docker-compose.yml
      run: echo "${{ secrets.DOCKER_COMPOSE_YML }}" > compose.yml

    - name: Set executable permission
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew build -x test

    - name: Build Docker image using Docker Compose
      run: docker-compose build

    - name: Tag Docker image
      run: docker tag makingjjj/valanse-api-server:latest makingjjj/valanse-api-server:${{ github.sha }}

    - name: Login to Docker Hub
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_ACCESS_TOKEN }}

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/valanse-api-server:${{ github.sha }}

    - name: Deploy to prod
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_PROD }}
        username: ec2-user
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd valanse-project/apiServer
          CURRENT_DIR=$(pwd)
          echo "IMAGE_TAG=${{ github.sha }}" > .env
          docker pull ${{ secrets.DOCKER_USERNAME }}/valanse-api-server:${{ github.sha }}
          docker-compose -f $CURRENT_DIR/docker-compose.yml stop apiserver
          docker-compose -f $CURRENT_DIR/docker-compose.yml rm -f apiserver
          docker-compose -f $CURRENT_DIR/docker-compose.yml up -d apiserver
